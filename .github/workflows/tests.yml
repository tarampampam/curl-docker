name: tests

on:
  push:
    branches: [master, main]
    paths-ignore: ['**.md']
    tags-ignore: ['**']
  pull_request:
    paths-ignore: ['**.md']

jobs: # Docs: <https://git.io/JvxXE>
  gitleaks:
    name: Gitleaks
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with: {fetch-depth: 0}

      - name: Check for GitLeaks
        uses: gacts/gitleaks@v1 # Action page: <https://github.com/gacts/gitleaks>

  build-image:
    name: Build docker image
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build docker image
        run: docker build -f ./Dockerfile --tag curl:local .

      - name: Save docker image
        run: docker save curl:local > ./docker-image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: ./docker-image.tar
          retention-days: 1

  scan-image:
    name: Scan docker image
    runs-on: ubuntu-20.04
    needs: [build-image]
    steps:
      - name: Download built docker image
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .artifact

      - name: Prepare image to run
        working-directory: .artifact
        run: docker load < docker-image.tar

      - name: Scan image
        uses: anchore/scan-action@v3 # action page: <https://github.com/anchore/scan-action>
        with:
          image: curl:local
          fail-build: true
          severity-cutoff: low # negligible, low, medium, high or critical

  try-to-use:
    name: Use docker image
    runs-on: ubuntu-20.04
    needs: [build-image]
    steps:
      - name: Download built docker image
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .artifact

      - name: Prepare image to run
        working-directory: .artifact
        run: docker load < docker-image.tar

      - name: Try to run (github.com)
        run: docker run --rm curl:local --fail https://github.com/

      - name: Try to run (1.1.1.1)
        run: docker run --rm curl:local --fail https://1.1.1.1/

      - name: Try to run (example.com)
        run: docker run --rm curl:local --fail http://ppa.launchpad.net/

      - name: Should exit with code 1
        run: |
          docker run --rm curl:local --fail "https://httpbin.org/status/401" || ec=$?
          test $ec -eq 1 && echo "all is ok (code = $ec)" || ( echo "Wrong exit code: $ec"; exit 1 )
